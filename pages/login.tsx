import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useState } from "react";
import axios, { isAxiosError } from "axios";
import { useCookies } from "react-cookie";
import { useQuery } from "@tanstack/react-query";

type RequestLoginParam = {
  id: string;
  password: string;
};

interface ResponseDataType {
  detail: {
    message: string;
    code: number;
  };
}

const Login = () => {
  const [id, setInputId] = useState("");
  const [password, setInputPassword] = useState("");
  const [error, setError] = useState("");
  const [cookies, setCookie] = useCookies(["access_token", "refresh_token"]);

  const requestLogin = async (param: RequestLoginParam) => {
    try {
      const response = await axios.post( "http://127.0.0.1:8000/api/user/login", param );

      if (response.status === 200) {
        const expires = new Date();
        expires.setTime(expires.getTime() + 30 * 1000);
        setCookie("access_token", response.data.data.access_token, {
          path: "/",
          expires,
        });
        setCookie("refresh_token", response.data.data.refresh_token, {
          path: "/",
          expires,
        });
      }
    } catch (error) {
      if (isAxiosError<ResponseDataType>(error)) {
        setError(error.response?.data.detail.message || "");
      }
    }
  };
  
  const handleLogin = async () => {
    if (!id) {
        setError("ID를 입력해주세요");
        return;
    }

    if (!password) {
        setError("Password를 입력해주세요");
        return
    }

    setError("");
    await requestLogin({
      id,
      password,
    });
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div>
            <div>LOGIN</div>
            <div>
          <input
            type="text"
            placeholder="ID"
            onChange={(e) => setInputId(e.target.value)}
          />
          </div>
          <div>
          <input
            type="password"
            placeholder="password"
            onChange={(e) => setInputPassword(e.target.value)}
          />
          </div>
          <div>{error}</div>
          <div className={styles.footer}>
            <button onClick={handleLogin}>전송</button>
          </div>
        </div>
      </main>

      <footer className={styles.footer}></footer>
    </div>
  );
};

export default Login;
